<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- p namespace 사용 -->
	<bean id="tv" class="polymorphism.SamsungTV" init-method="initMethod" destroy-method="destroyMethod"
	lazy-init="true" p:speaker-ref="sony" p:price="270000">
	
<!-- 	  생성자 기반 인젝션 
 		<constructor-arg ref="apple"/> 
 		<constructor-arg value="2700000"/> -->
 		
 		<!-- 설정자 기반 인젝션
 		<property name="speaker" ref="apple"/>
 		<property name="price" value="270000"/> -->
 		
 		
	</bean>
	
	<bean id="sony" class="polymorphism.SonySpeaker" lazy-init="true"/>
	<bean id="apple" class="polymorphism.AppleSpeaker" lazy-init="true"/>
	<!-- init=method 속성: 객체 생성 후 맴버변수를 초기화 -->
	<!-- destroy-method 속성: 스프링 컨테이너가 객체를 삭제하기 직전에 호출 -->
	
	<!-- 컨테이너 구동시 스프링 설정 파일에 등록된 모든 bean이 생성 >> 자주 사용하지도 않는 bean도 선언하여 비효율적 -->
	<!-- lazy-init 속성: bean을 미리 생성하지 않고, 클라이언트가 요청하는 시점에 생성 
	사용 예: lazy-init="true"-->
	
	<!-- LIST 관련 Bean -->
	<bean id="collectionBean"
		class="com.springbook.ioc.injection.CollectionBean">
		<property name="addressList">
			<list>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 성동구 행당동</value>
			</list>
		</property>
		<property name="addressSet">
			<set>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 강남구 역삼동</value>
				<value>서울시 성동구 행당동</value>
			</set>
		</property>
		
		<property name="addressMap">
			<map>
				<entry>
					<key><value>고길동</value></key>
					<value>서울시 강남구 역삼동</value>
				</entry>
				<entry>
					<key><value>마이콜</value></key>
					<value>서울시 강서구 화곡동</value>
				</entry>
			</map>
		</property>
		
		<property name="addressProperties">
			<props>
				<prop key="고길동">서울시 강남구 역삼동</prop>
				<prop key="마이콜">서울시 강서구 화곡동</prop>
			</props>
		</property>
	</bean>
	
	
</beans>
